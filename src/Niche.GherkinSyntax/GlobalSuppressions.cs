/*
 * This file is used by Code Analysis to maintain SuppressMessage
 * attributes that are applied to this project.
 * Project-level suppressions either have no target or are given
 * a specific target and scoped to a namespace, type, member, etc.
 */

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage(
    "Maintainability",
    "AV1551:Method overload should call another overload",
    Justification = "This project uses overloads that call member methods.")]

[assembly: SuppressMessage(
    "Naming",
    "CA1715:Identifiers should have correct prefix",
    Justification = "This project uses single capital letters for generic types")]

[assembly: SuppressMessage(
    "Naming",
    "CA1716:Identifiers should not match keywords",
    Justification = "This project uses 'When', 'And' and 'Then' to create a fluent API.")]

[assembly: SuppressMessage(
    "Redundancies in Symbol Declarations",
    "RECS0154:Parameter is never used",
    Justification = "Generated code is not under our control",
    Scope = "type",
    Target = "~T:AutoGeneratedProgram")]

[assembly: SuppressMessage(
    "StyleCop.CSharp.ReadabilityRules",
    "SA1101:Prefix local calls with this",
    Justification = "Using 'this' where not required by the language creates clutter and obfuscates code")]

// There's a persistent myth that placing using directives within namespaces improves compiler performance
// This was never true with the original compiler and it's not true with the Roslyn compiler either.
[assembly: SuppressMessage(
    "StyleCop.CSharp.OrderingRules",
    "SA1200:Using directives must be placed correctly",
    Justification = "Using statements belong at the top of the file.")]

[assembly: SuppressMessage(
    "StyleCop.CSharp.NamingRules",
    "SA1309:FieldNamesMustNotBeginWithUnderscore",
    Justification = "This project chooses to use _ to prefix private fields.")]

[assembly: SuppressMessage(
    "StyleCop.CSharp.DocumentationRules",
    "SA1633:File must have header",
    Justification = "Source code files files don't need a file header.")]

[assembly: SuppressMessage(
    "StyleCop.CSharp.NamingRules",
    "SA1314:Type parameter names should begin with T",
    Justification = "This project uses single capital letters for generic types")]
